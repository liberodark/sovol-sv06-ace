[gcode_macro _global_var]
variable_pause_park:{'x': 2, 'y': 225, 'z': 10, 'e': 1}
variable_z_maximum_lifting_distance: 250
variable_pause_resume_travel_speed: 150
gcode:

[gcode_macro _IDLE_TIMEOUT]
gcode:
    {% if printer.print_stats.state == "paused" %}
      RESPOND TYPE=echo MSG="No operations in 10min!"
    {% else %}
     M84
     TURN_OFF_HEATERS
    {% endif %}

[gcode_macro _ALL_FAN_OFF]
gcode:
    M106 S0
    M107

[gcode_macro CLEAN_NOZZLE]
gcode =
    BED_MESH_CLEAR
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}
    G90
    G1 X110 Y220 F9000
    M109 S200
    G28 Z
    M400
    # Move Only to Clean Up Zone
    G1 X60 Y225 Z0.3 F4800
    G1 X20 Y225.5 F1000
    G1 X52 Y224.5
    G1 X32 Y225.5
    G1 X50 Y224.5
    G1 X36 Y225.5
    G1 X48 Y224.5
    G1 X40 Y225.5
    G1 Z3
    G1 X80 Y224 F15000
    G1 Z-0.3 F900
    G1 X85 F600
    M106 S178
    M109 S130
    M107
    G1 Z5 F900
    G1 X110 Y110 F9000
    G28 Z
    M400

[gcode_macro _UNLOAD_FILAMENT_CHANGE]
gcode:
    {% if printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp %}
        G91
        G1 E20.0   F300
        G1 E10.0   F1200
        G1 E-20.0  F3600
        M400
        G4 P5000
        G1 E-40.0  F1800
        M400
        G90
    {% else %}
        {action_respond_info("Nozzle not hot enough!")}
    {% endif %}

[gcode_macro _UNLOAD_FILAMENT]
gcode:
    {% if printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp %}
        G91
        G1 E5.0   F300
        G1 E10.0   F1200
        G1 E-20.0  F3600
        M400
        G4 P5000
        G1 E-40.0  F1800
        M400
        G90
    {% else %}
        {action_respond_info("Nozzle not hot enough!")}
    {% endif %}


[gcode_macro _LOAD_FILAMENT]
gcode:
    {% if printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp %}
        G91
        G1 E50.0   F300
        M400
        G90
    {% else %}
        {action_respond_info("Nozzle not hot enough!")}
    {% endif %}

[gcode_macro _CONTINUE_LOAD_FILAMENT]
gcode:
    {% if printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp %}
        G91
        G1 E10.0   F300
        M400
        G90
    {% else %}
        {action_respond_info("Nozzle not hot enough!")}
    {% endif %}

[gcode_macro START_PRINT]
gcode:
    CLEAR_PAUSE
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}

    # Fast and parallel heating
    M140 S{params.BED_TEMP|default(60)}
    M104 S{params.EXTRUDER_TEMP|default(200)}

    # While heating, we make the bed mesh
    BED_MESH_CALIBRATE ADAPTIVE=1

    # Now we wait for the temperatures
    M190 S{params.BED_TEMP|default(60)}
    M109 S{params.EXTRUDER_TEMP|default(200)}

    # Cleaning Nozzle (optional)
    #CLEAN_NOZZLE

[gcode_macro END_PRINT]
description:
variable_state: 'normal'
gcode:
    {% set z_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance|int %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    M117 Finish Print!!!
    G91
    {% if printer['filament_switch_sensor filament_sensor'].enable == True and
          printer['filament_switch_sensor filament_sensor'].filament_detected == True
    %}
        {% if printer.extruder.temperature >= e_mintemp %}
            G1 E-2 F2700
            G1 E-2 Z0.2 F2400
        {% endif %}
    {% endif %}

    {% if (printer.gcode_move.position.z + 10) < z_max %}
        G1 Z+10 F600
    {% else %}
        G1 Z+{(z_max - printer.gcode_move.position.z)} F3000
    {% endif %}
    G90
    G1 X3 Y225 F3000

    _ALL_FAN_OFF
    TURN_OFF_HEATERS

    M84

    M220 S100
    M221 S100

    CLEAR_PAUSE
    SET_GCODE_OFFSET Z=0 MOVE=1
    {action_respond_info("Finish Print!")}


[gcode_macro CANCEL_PRINT]
description:
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
    {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
    {% set z_park = printer['gcode_macro _global_var'].pause_park.z|float %}
    {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    CANCEL_PRINT_BASE

    M117 Cancel Print!!!
    G91
    {% if printer['filament_switch_sensor filament_sensor'].enabled == True and
          printer['filament_switch_sensor filament_sensor'].filament_detected == True
    %}
        {% if printer.extruder.temperature >= e_mintemp %}
            G1 E-{e_restract} F500
        {% else %}
            {action_respond_info("Nozzle not hot enough")}
        {% endif %}
    {% endif %}

    {%if (printer.gcode_move.position.z + 10) < z_lift_max %}
        G1 Z+10 F600
    {% else %}
        G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F600
    {% endif %}
        G90
        G1 X{x_park} Y{y_park} F3000

    TURN_OFF_HEATERS
    _ALL_FAN_OFF

    CLEAR_PAUSE
    M84
    SET_GCODE_OFFSET Z=0 MOVE=1
    M117 Ready
    {action_respond_info("Cancel Print Success!")}


[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
gcode:
    {% if printer.pause_resume.is_paused == False %}
        {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
        {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
        {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
        {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}

        {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

        {action_respond_info("Pause Print!")}

        PAUSE_BASE
        M117 Pause Print!!!
        G91
        {% if (printer.gcode_move.position.z + 5) < z_lift_max %}
            G1 Z+5 F600
        {% else %}
            G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F600
        {% endif %}
        G90
        {% if printer.gcode_move.position.x != x_park and
                printer.gcode_move.position.y != y_park
        %}
            G1 X{x_park} Y{y_park} F{printer["gcode_macro _global_var"].pause_resume_travel_speed * 60}
        {% endif %}

        M104 S{printer.extruder.target}

        {% if state == 'normal' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                {% if printer['filament_switch_sensor filament_sensor'].enabled == True and
                    printer['filament_switch_sensor filament_sensor'].filament_detected == True
                %}
                    G91
                    G1 E-{e_restract} F300
                    G90
                {% elif printer['filament_switch_sensor filament_sensor'].enabled == True and
                        printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
                    _UNLOAD_FILAMENT_CHANGE
                {% endif %}
            {% endif %}
        {% elif state == 'filament_change' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                _UNLOAD_FILAMENT
            {% endif %}
        {% endif %}
    {% endif %}


[delayed_gcode _resume_wait]
gcode:
    {% if printer['gcode_macro RESUME'].execute|lower != 'false' %}
        RESUME
    {% endif %}


[gcode_macro RESUME]
description: Pause the actual running print
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}

    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

    {% if state == 'filament_change' %}
        {% if printer["filament_switch_sensor filament_sensor"].enable == True and
              printer["filament_switch_sensor filament_sensor"].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {% if printer.extruder.temperature + 5 >= printer.extruder.target %}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% else %}
                M104 S{extruder_target_temp}
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_target_temp}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% endif %}
            {action_respond_info("Print resumming!")}
            RESUME_BASE
        {% endif %}
    {% elif state == 'normal' %}
        {% if printer['filament_switch_sensor filament_sensor'].enable != True and
              printer['filament_switch_sensor filament_sensor'].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {action_respond_info("Print resumming!")}
            {% if printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp %}
                G91
                G1 E{e_restract} F300
                G90
            {% endif %}
            M117 Printing now!!!
            RESUME_BASE
        {% endif %}
    {% endif %}

[gcode_macro M109]
rename_existing: M99109
gcode:
    {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-1} MAXIMUM={s+2}
    {% endif %}

[gcode_macro M190]

rename_existing: M99190
gcode:
    {% set s = params.S|float %}
    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-1} MAXIMUM={s+2}
    {% endif %}

[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change
